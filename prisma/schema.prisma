// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//===============
// Usuario
//===============

model User {
  id           String       @id @default(uuid())
  email        String       @unique
  name         String
  created_at   DateTime     @default(now())
  updated_at   DateTime     @updatedAt
  password  String
  type         String
  posts         Post[]      @relation("user")
  groups        Group[]     @relation("group_user")
  logs          Logs[]      @relation("logs_user")


  @@map("user")
}

//===============
// Group
//===============

model Group {
  id              String        @unique   @id @default(uuid())
  name_group      String        @unique 
  description     String
  color_hex       String
  user            User          @relation("group_user", fields: [user_id], references: [id])
  user_id         String
  post            Post[]        @relation("group_post")
  created_at      DateTime      @default(now())
  updated_at      DateTime      @updatedAt

  @@map("group")
}

//===============
// POST
//===============
model Post {
  id           String       @unique @id @default(uuid())
  title        String       @unique
  subtitle     String
  subject      String
  url_photo    String
  date_post    DateTime    @default(now())
  group        Group       @relation("group_post", fields: [group_id], references: [id])
  group_id     String
  user         User        @relation("user", fields: [user_id], references: [id])
  user_id      String


  @@map("post")
}


//===============
// LOG
//===============

model Logs {
  id       String  @unique   @id @default(uuid())
  method   String
  date     DateTime @default(now())
  user     User   @relation("logs_user", fields: [userId], references: [id])
  userId    String
  table_name String

  @@map("logs")
}
